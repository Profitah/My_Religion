server:
  port: 8080
  ssl:
    key-store: ${SERVER_SSL_KEY_STORE}
    key-store-password: ${SERVER_SSL_KEY_STORE_PASSWORD}
    key-store-type: pkcs12
    key-alias: tomcat
    enabled: true
spring:
  profiles:
    include: core
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${JDBC_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    generate-ddl: true
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        default_batch_fetch_size: ${chunkSize:100}
        jdbc.batch_size: 20
        order_inserts: true
        order_updates: true
    show-sql: true

    springdoc:
      packages-to-scan: com.gdsc
      default-consumes-media-type: application/json;charset=UTF-8
      default-produces-media-type: application/json;charset=UTF-8
      swagger-ui:
        tags-sorter: method
        operations-sorter: alpha
      api-docs:
        path: /api-docs/json
        groups:
          enabled: true
      cache:
        disabled: true

    defer-datasource-initialization: true

  sql:
    init:
      mode: always

---
spring:
  config:
    activate:
      on-profile: prod
logging:
  discord:
    webhook-url: ${DISCORD_WEBHOOK_URL}
  config: classpath:logback-spring.xml

---
spring:
  cloud:
    gcp:
      storage:
        credentials:
         location: ${LOCATION}
        project-id: ${PROJECT_ID}
        bucket: ${BUCKET}